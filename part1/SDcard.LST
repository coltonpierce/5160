C51 COMPILER V9.53.0.0   SDCARD                                                            10/14/2015 17:59:31 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE SDCARD
OBJECT MODULE PLACED IN SDcard.OBJ
COMPILER INVOKED BY: \\minerfiles.mst.edu\dfs\users\mrwpp5\Desktop\C51\BIN\C51.EXE SDcard.c OPTIMIZE(8,SPEED) DEBUG OBJE
                    -CTEXTEND TABS(2)

line level    source

   1          #include "main.h"
   2          #include "port.h"
   3          #include "SDcard.h"
   4          #include "spi.h"
   5          
   6          
   7          uint8_t SDcard_init()
   8          {
   9   1        uint8_t return_value[5];
  10   1        uint8_t error_flag, index;
  11   1        
  12   1        
  13   1        //Buffer ?
  14   1        ncs = 1;
  15   1        for(index = 0; index < 10; index++)
  16   1        {
  17   2          SPI_transfer(0xFF, return_value);
  18   2        }
  19   1        
  20   1        
  21   1        // Send CMD0 //
  22   1        
  23   1        error_flag = trans_CMD0(return_value);
  24   1        
  25   1        
  26   1        // Send CMD8 //
  27   1        if(error_flag == NO_ERRORS)
  28   1        {
  29   2          error_flag = trans_CMD8(return_value);
  30   2        }
  31   1        
  32   1        // Send CMD58 //
  33   1        if(error_flag == NO_ERRORS)
  34   1        {
  35   2          error_flag = trans_CMD58(return_value);
  36   2          if(return_value[0] == 0x01)
  37   2          {
  38   3            error_flag = WRONG_RESPONCE;
  39   3          }
  40   2        }
  41   1        
  42   1        // Send ACMD41 //
  43   1        if(error_flag == NO_ERRORS)
  44   1        {
  45   2          error_flag = trans_ACMD41(return_value);
  46   2        }
  47   1        
  48   1        // Send CMD58 //
  49   1        if(error_flag == NO_ERRORS)
  50   1        {
  51   2          error_flag = trans_CMD58(return_value);
  52   2          if(return_value[1] & 0xC0) //bit 31 and 30 are set
  53   2          {
  54   3            //High Capacity
C51 COMPILER V9.53.0.0   SDCARD                                                            10/14/2015 17:59:31 PAGE 2   

  55   3          }
  56   2          else if(return_value[1] & 0x80) // only bit 31 is set
  57   2          {
  58   3            //Standard Capacity
  59   3            error_flag = WRONG_SDCARD;
  60   3          }
  61   2          else
  62   2          {
  63   3            error_flag = WRONG_RESPONCE;
  64   3          }
  65   2        }
  66   1        
  67   1        if(error_flag != NO_ERRORS) // LED4 is the error light and this should also be redundent.
  68   1        {
  69   2          LED4 = 0;
  70   2        }
  71   1        ncs = 1; // should not be needed but just in case
  72   1        
  73   1        return error_flag; 
  74   1      }
  75          
  76          
  77          
  78          
  79          
  80          
  81          
  82          
  83          
  84          
  85          
  86          
  87          
  88          
  89          
  90          
  91          uint8_t trans_CMD0(uint8_t *return_value)
  92          {
  93   1        uint8_t error_flag;
  94   1      
  95   1        // Send CMD0
  96   1        ncs = 0;
  97   1        error_flag = send_command(0, 0);
  98   1        if(error_flag == NO_ERRORS)
  99   1        {
 100   2          error_flag = get_response(1, return_value);
 101   2        }
 102   1        if(error_flag == NO_ERRORS)
 103   1        {
 104   2          if(return_value[0] != 0x01)
 105   2          {
 106   3            error_flag = WRONG_RESPONCE;
 107   3          }
 108   2        }
 109   1        ncs = 1;
 110   1        
 111   1        return error_flag;
 112   1      }
 113          
 114          
 115          
 116          
C51 COMPILER V9.53.0.0   SDCARD                                                            10/14/2015 17:59:31 PAGE 3   

 117          
 118          uint8_t trans_CMD8(uint8_t *return_value)
 119          {
 120   1        uint8_t error_flag;
 121   1        // Send CMD8
 122   1        ncs = 0;
 123   1        error_flag = send_command(8, 0x000001AA);
 124   1        if(error_flag == NO_ERRORS)
 125   1        {
 126   2          error_flag = get_response(5, return_value);
 127   2        }
 128   1        if(return_value[0] == 0x05)
 129   1          error_flag = WRONG_RESPONCE;
 130   1        else if(return_value[0] != 0x01)
 131   1          error_flag = FAIL_SDINIT;
 132   1        ncs = 1;
 133   1        return error_flag;
 134   1      }
 135          
 136          
 137          
 138          
 139          
 140          uint8_t trans_CMD58(uint8_t *return_value)
 141          {
 142   1        uint8_t error_flag;
 143   1        // SEND CMD58
 144   1        ncs = 0;
 145   1        error_flag = send_command(58, 0);
 146   1        if(error_flag == NO_ERRORS)
 147   1        {
 148   2          error_flag = get_response(5, return_value);
 149   2        }
 150   1      //  voltage_range = return_value[2];
 151   1        return error_flag;
 152   1      }
 153          
 154          
 155          
 156          
 157          uint8_t trans_ACMD41(uint8_t *return_value)
 158          {
 159   1        uint8_t error_flag, timeout;
 160   1        uint32_t ACMD41_argum = 0x40000000;
 161   1      
 162   1        
 163   1        // Send ACMD41
 164   1        
 165   1        ncs = 0;
 166   1        
 167   1      
 168   1        timeout = 0;
 169   1        do
 170   1        {
 171   2          timeout++;
 172   2          error_flag = send_command(55, 0);
 173   2          if(error_flag == NO_ERRORS)
 174   2            error_flag = get_response(1, return_value);
 175   2          if(!(return_value[0] == 0x00 || return_value[0] == 0x01))
 176   2            error_flag = SPI_ERROR;
 177   2          if(error_flag == NO_ERRORS)
 178   2            error_flag = send_command(41, ACMD41_argum);
C51 COMPILER V9.53.0.0   SDCARD                                                            10/14/2015 17:59:31 PAGE 4   

 179   2          if(error_flag == NO_ERRORS)
 180   2            error_flag = get_response(1, return_value);
 181   2          if(!(return_value[0] == 0x00 || return_value[0] == 0x01))
 182   2            error_flag = SPI_ERROR;
 183   2          timeout++;
 184   2        }while(return_value[0] != 0x00 && timeout != 0 && error_flag == NO_ERRORS);
 185   1        if(timeout == 0)
 186   1        {
 187   2          error_flag = TIMEOUT_ERROR;
 188   2        }
 189   1        ncs = 1;
 190   1        
 191   1        return error_flag;
 192   1      }
 193          
 194          
 195          
 196          
 197          
 198          
 199          
 200          
 201          
 202          
 203          
 204          
 205          
 206          
 207          
 208          
 209          
 210          uint8_t read_block(uint32_t block_number, uint8_t *block_info)
 211          {
 212   1        uint8_t error_flag, timeout;
 213   1        uint8_t return_value[5];
 214   1        ncs = 0;
 215   1        timeout = 0;
 216   1        error_flag = send_command(17, block_number);
 217   1        do
 218   1        {
 219   2          timeout++;
 220   2          if(error_flag == NO_ERRORS)
 221   2            error_flag = get_response(1, &return_value);
 222   2        }while(return_value != 0x00 && timeout != 0);
 223   1        if(timeout == 0)
 224   1        {
 225   2          error_flag = TIMEOUT_ERROR;
 226   2        }
 227   1        timeout = 0;
 228   1        do
 229   1        {
 230   2          timeout++;
 231   2          if(error_flag == NO_ERRORS)
 232   2            error_flag = get_response_no_end(1, &return_value);
 233   2        }while(return_value[0] != 0xFE && (return_value[0] & 0xF0) != 0x00   && timeout != 0 && error_flag == NO_
             -ERRORS);
 234   1        if(timeout == 0)
 235   1        {
 236   2          error_flag = TIMEOUT_ERROR;
 237   2        }
 238   1        if((return_value[0] & 0xF0 )== 0x00)
 239   1        {
C51 COMPILER V9.53.0.0   SDCARD                                                            10/14/2015 17:59:31 PAGE 5   

 240   2          error_flag = SDCARD_ERROR;
 241   2        }
 242   1        if(error_flag == NO_ERRORS)
 243   1        {
 244   2          error_flag = get_response_no_end(512, block_info);
 245   2        }
 246   1        
 247   1        if(error_flag == NO_ERRORS)
 248   1        {
 249   2          error_flag = get_response(2, &return_value);
 250   2      //    CRC16 = return_value[0] * 256 + return_value[1]; Check sum, dont care
 251   2        }
 252   1        ncs = 1;
 253   1        
 254   1        return error_flag;
 255   1        
 256   1      }
 257          
 258          
 259          
 260          
 261          
 262          
 263          
 264          
 265          
 266          
 267          
 268          
 269          
 270          
 271          
 272          
 273          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    555    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      36
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
